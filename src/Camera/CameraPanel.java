package Camera;

import java.awt.image.BufferedImage;
import java.awt.image.DataBufferByte;
import java.io.File;
import java.io.FilenameFilter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
import org.opencv.core.Core;
import org.opencv.core.Mat;
import org.opencv.core.MatOfRect;
import org.opencv.core.Point;
import org.opencv.core.Rect;
import org.opencv.core.Scalar;
import org.opencv.imgcodecs.Imgcodecs;
import org.opencv.imgproc.Imgproc;
import org.opencv.objdetect.CascadeClassifier;
import org.opencv.videoio.VideoCapture;


/**
 *
 * @author Arun
 */
public class CameraPanel extends javax.swing.JFrame implements Runnable{

    static VideoCapture Capture;
    BufferedImage bufferedImage;
    ImageIcon icon;
    CascadeClassifier facedetector;
    MatOfRect facedetections;
    int i=1;
    testDB db = new testDB();
    String testFacesPath = ".\\TestFaces";
    String facesPath = ".\\Faces";
    
    /**
     * Creates new form CameraPanel
     */
    public CameraPanel() {
        initComponents();
        jLabel1.setText("<html>Select Camera one<br>by one & press<br>Capture Button.");
        System.loadLibrary("opencv_java330");        
        facedetector = new CascadeClassifier("haarcascade_frontalface_alt.xml");
        facedetections = new MatOfRect();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cameraOutput = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        MarkedAttendance = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new java.awt.CardLayout());

        cameraOutput.setBackground(new java.awt.Color(255, 255, 255));

        jLabel37.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 14)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(102, 102, 102));
        jLabel37.setIcon(new javax.swing.ImageIcon("C:\\Users\\Arun\\Desktop\\Icons\\Webcam_30px.png")); // NOI18N
        jLabel37.setText("Default");
        jLabel37.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel37.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel37MouseClicked(evt);
            }
        });

        jLabel38.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 14)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(102, 102, 102));
        jLabel38.setIcon(new javax.swing.ImageIcon("C:\\Users\\Arun\\Desktop\\Icons\\Webcam_30px.png")); // NOI18N
        jLabel38.setText("Camera 1");
        jLabel38.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel38.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel38MouseClicked(evt);
            }
        });

        jLabel39.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 14)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(102, 102, 102));
        jLabel39.setIcon(new javax.swing.ImageIcon("C:\\Users\\Arun\\Desktop\\Icons\\Webcam_30px.png")); // NOI18N
        jLabel39.setText("Camera 2");
        jLabel39.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel39.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel39MouseClicked(evt);
            }
        });

        jLabel40.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 14)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(102, 102, 102));
        jLabel40.setIcon(new javax.swing.ImageIcon("C:\\Users\\Arun\\Desktop\\Icons\\Webcam_30px.png")); // NOI18N
        jLabel40.setText("Camera 3");
        jLabel40.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel40.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel40MouseClicked(evt);
            }
        });

        jLabel41.setBackground(new java.awt.Color(255, 255, 255));
        jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel41.setOpaque(true);

        jLabel42.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 14)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(102, 102, 102));
        jLabel42.setIcon(new javax.swing.ImageIcon("C:\\Users\\Arun\\Desktop\\Icons\\User Male_30px.png")); // NOI18N
        jLabel42.setText("Capture");
        jLabel42.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel42.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel42MouseClicked(evt);
            }
        });

        jLabel43.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 14)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(102, 102, 102));
        jLabel43.setIcon(new javax.swing.ImageIcon("C:\\Users\\Arun\\Desktop\\Icons\\Webcam_30px.png")); // NOI18N
        jLabel43.setText("Camera 4");
        jLabel43.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel43.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel43MouseClicked(evt);
            }
        });

        jLabel44.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 14)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(102, 102, 102));
        jLabel44.setIcon(new javax.swing.ImageIcon("C:\\Users\\Arun\\Desktop\\Icons\\User Male_30px.png")); // NOI18N
        jLabel44.setText("Take Attendance");
        jLabel44.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel44.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel44MouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));

        jLabel45.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 14)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(102, 102, 102));
        jLabel45.setIcon(new javax.swing.ImageIcon("C:\\Users\\Arun\\Desktop\\Icons\\Webcam_30px.png")); // NOI18N
        jLabel45.setText("Camera 5");
        jLabel45.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel45.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel45MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout cameraOutputLayout = new javax.swing.GroupLayout(cameraOutput);
        cameraOutput.setLayout(cameraOutputLayout);
        cameraOutputLayout.setHorizontalGroup(
            cameraOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cameraOutputLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cameraOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cameraOutputLayout.createSequentialGroup()
                        .addGroup(cameraOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel38, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel39, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel43, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel45, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(6, 6, 6)
                        .addComponent(jLabel41, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(34, 34, 34))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cameraOutputLayout.createSequentialGroup()
                        .addGap(0, 226, Short.MAX_VALUE)
                        .addComponent(jLabel42)
                        .addGap(76, 76, 76)
                        .addComponent(jLabel44)
                        .addContainerGap(236, Short.MAX_VALUE))))
        );
        cameraOutputLayout.setVerticalGroup(
            cameraOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cameraOutputLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel37)
                .addGap(26, 26, 26)
                .addComponent(jLabel38)
                .addGap(26, 26, 26)
                .addComponent(jLabel39)
                .addGap(26, 26, 26)
                .addComponent(jLabel40)
                .addGap(26, 26, 26)
                .addComponent(jLabel43)
                .addGap(26, 26, 26)
                .addComponent(jLabel45)
                .addGap(26, 26, 26)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(57, Short.MAX_VALUE))
            .addGroup(cameraOutputLayout.createSequentialGroup()
                .addComponent(jLabel41, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(cameraOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel42)
                    .addComponent(jLabel44))
                .addContainerGap())
        );

        jPanel1.add(cameraOutput, "card2");

        MarkedAttendance.setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jRadioButton1.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 14)); // NOI18N
        jRadioButton1.setForeground(new java.awt.Color(102, 102, 102));
        jRadioButton1.setText("0");
        jRadioButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton1MouseClicked(evt);
            }
        });

        jRadioButton2.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 14)); // NOI18N
        jRadioButton2.setForeground(new java.awt.Color(102, 102, 102));
        jRadioButton2.setText("1");
        jRadioButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout MarkedAttendanceLayout = new javax.swing.GroupLayout(MarkedAttendance);
        MarkedAttendance.setLayout(MarkedAttendanceLayout);
        MarkedAttendanceLayout.setHorizontalGroup(
            MarkedAttendanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MarkedAttendanceLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(MarkedAttendanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2))
                .addGap(0, 30, Short.MAX_VALUE))
        );
        MarkedAttendanceLayout.setVerticalGroup(
            MarkedAttendanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MarkedAttendanceLayout.createSequentialGroup()
                .addGroup(MarkedAttendanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MarkedAttendanceLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(MarkedAttendanceLayout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(jRadioButton1)
                        .addGap(28, 28, 28)
                        .addComponent(jRadioButton2)))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel1.add(MarkedAttendance, "card3");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 574, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 478, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel39MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel39MouseClicked
        VideoCapture cp = new VideoCapture(2);
        if(cp.isOpened()){
        Capture = new VideoCapture(2);
        }else {
        JOptionPane.showMessageDialog(null, "Camera Not Found !!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jLabel39MouseClicked

    private void jLabel38MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel38MouseClicked
        VideoCapture cp = new VideoCapture(1);
        if(cp.isOpened()){
        Capture = new VideoCapture(1);
        }else {
        JOptionPane.showMessageDialog(null, "Camera Not Found !!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jLabel38MouseClicked

    private void jLabel37MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel37MouseClicked
        Capture = new VideoCapture(0);  
    }//GEN-LAST:event_jLabel37MouseClicked

    private void jLabel40MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel40MouseClicked
        VideoCapture cp = new VideoCapture(3);
        if(cp.isOpened()){
        Capture = new VideoCapture(3);
        }else {
        JOptionPane.showMessageDialog(null, "Camera Not Found !!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jLabel40MouseClicked

    private void jLabel43MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel43MouseClicked
        VideoCapture cp = new VideoCapture(4);
        if(cp.isOpened()){
        Capture = new VideoCapture(4);
        }else {
        JOptionPane.showMessageDialog(null, "Camera Not Found !!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jLabel43MouseClicked

    void deleteDir(File file) {
    File[] contents = file.listFiles();
    if (contents != null) {
        for (File f : contents) {
            deleteDir(f);
        }
    }
    file.delete();
}
    
    private void jLabel42MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel42MouseClicked
        String filename = ".\\TestFaces\\1-TestImg.png";
        File output = new File(filename);
        File fd = new File(testFacesPath);
        fd.mkdir();
        Mat matimg = new Mat();
        Rect rectcrop;
        Capture.read(matimg);
        facedetector.detectMultiScale(matimg, facedetections);
        for(Rect rect : facedetections.toArray())
        {
            rectcrop = new Rect(rect.x, rect.y, rect.width, rect.height);
            Mat cropimg = new Mat(matimg, rectcrop);
            Mat grayimg = new Mat();
            Imgproc.cvtColor(cropimg, grayimg, Imgproc.COLOR_BGR2GRAY);           
            while(output.exists()){
                i++;
                filename =".\\TestFaces\\"+i+"-TestImg.png";
                output = new File(filename);
                
            }
            Imgcodecs.imwrite(filename, grayimg);
        }
        if(output.exists()){
        JOptionPane.showMessageDialog(null, "Faces Saved !!");
        }
        else{
        JOptionPane.showMessageDialog(null, "Faces Not Saved !!");            
        }
        jLabel1.setText("<html>Now Select Another<br>Camera if present.</html>");
        
        

    }//GEN-LAST:event_jLabel42MouseClicked

    private void jLabel44MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel44MouseClicked
        try {
            
            db.DirLoader();
            recognize();
            Capture.release();    
            cameraOutput.hide();            
            MarkedAttendance.show();            
            viewMarkedAttendance(db.course, db.branch, db.semester, db.subject, db.LectureNo);    
            File fd = new File(facesPath);
            deleteDir(fd);
            File fd2 = new File(testFacesPath);
            deleteDir(fd2);
        } catch (ClassNotFoundException | SQLException | IOException ex) {
            JOptionPane.showMessageDialog(null, ex);
        } 
    }//GEN-LAST:event_jLabel44MouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        int selectedRowIndex = jTable1.getSelectedRow();
        if("1".equals(model.getValueAt(selectedRowIndex, 1).toString())){
            jRadioButton2.setSelected(true);           
            jRadioButton1.setSelected(false);
        }
        else{
            jRadioButton1.setSelected(true);
            jRadioButton2.setSelected(false);           
        }
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void jRadioButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton1MouseClicked
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        int selectedRowIndex = jTable1.getSelectedRow();
        updateAttendance(db.course, db.branch, db.semester, db.subject, db.LectureNo ,
                Integer.parseInt(model.getValueAt(selectedRowIndex, 0).toString()),
                0);
        viewMarkedAttendance(db.course, db.branch, db.semester, db.subject, db.LectureNo);    
        jRadioButton1.setSelected(true);
        jRadioButton2.setSelected(false); 
    }//GEN-LAST:event_jRadioButton1MouseClicked

    private void jRadioButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton2MouseClicked
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        int selectedRowIndex = jTable1.getSelectedRow();
        updateAttendance(db.course, db.branch, db.semester, db.subject, db.LectureNo ,
                Integer.parseInt(model.getValueAt(selectedRowIndex, 0).toString()),
                1);
        viewMarkedAttendance(db.course, db.branch, db.semester, db.subject, db.LectureNo);    
        jRadioButton2.setSelected(true);           
        jRadioButton1.setSelected(false);        
    }//GEN-LAST:event_jRadioButton2MouseClicked

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        Capture.release();
    }//GEN-LAST:event_formWindowClosed

    private void jLabel45MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel45MouseClicked
        VideoCapture cp = new VideoCapture(5);
        if(cp.isOpened()){
        Capture = new VideoCapture(5);
        }else {
        JOptionPane.showMessageDialog(null, "Camera Not Found !!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jLabel45MouseClicked

    public void viewMarkedAttendance(String course, String branch, int semester,String subject, int LectureNo){
                DateFormat df = new SimpleDateFormat("dd_MM_yy");
	        Calendar calobj = Calendar.getInstance();
	        String date =df.format(calobj.getTime());
        try {
            Connection connection = DriverManager.getConnection("jdbc:sqlite:"+course+branch+".db");
            String sql = "select RollNumber,date_"+date+"_L_"+LectureNo+" from "+branch+semester+subject;
            PreparedStatement pstt = connection.prepareStatement(sql);
            ResultSet rs = pstt.executeQuery();
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }
    
    public void updateAttendance(String course, String branch, int semester,String subject, int LectureNo, int rollNumber, int value){
                DateFormat df = new SimpleDateFormat("dd_MM_yy");
	        Calendar calobj = Calendar.getInstance();
	        String date =df.format(calobj.getTime());
        try {
            Connection connection = DriverManager.getConnection("jdbc:sqlite:"+course+branch+".db");
//            String sql = "select RollNumber,date_"+date+"_L_"+LectureNo+" from "+branch+semester+subject;
            String sql = "update "+branch+semester+subject+" set date_"+date+"_L_"+LectureNo+"="+value+" where rollnumber ="+rollNumber;
            PreparedStatement pstt = connection.prepareStatement(sql);
            pstt.executeUpdate();            
        } catch (SQLException ex) {
            System.out.println("error");
            JOptionPane.showMessageDialog(null, ex);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    
    @Override
    public void run() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CameraPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CameraPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CameraPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CameraPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        CameraPanel cp = new CameraPanel();
        cp.setVisible(true);
        cp.cameraOutput();
    }	
	public void cameraOutput() {
		Capture = new VideoCapture(0);
		 Mat webcam_image = new Mat();
                 if(Capture.isOpened())
                 {
			while(true)
			{
                            if(Capture.isOpened())
                            {
				Capture.read(webcam_image);
				if(!webcam_image.empty()){
                                    facedetector.detectMultiScale(webcam_image, facedetections);
                                    for (Rect rect : facedetections.toArray()) {
                                        Imgproc.rectangle(webcam_image, new Point(rect.x, rect.y), new Point(rect.x + rect.width, rect.y + rect.height), new Scalar(0, 255, 0));
                                    }
                                        matToBufferedImage(webcam_image);
                                        icon = new ImageIcon(bufferedImage);
                                        jLabel41.setIcon(icon);
				}                                
                            }
				try {
					Thread.sleep(33);
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					JOptionPane.showMessageDialog(null, e);
				}
                                }
                            }
                            else{
                                JOptionPane.showMessageDialog(null, "Camera Not Found !!",
                                        "Error", JOptionPane.ERROR_MESSAGE);
                            }
	}
        
        public void matToBufferedImage(Mat matBGR){
                int width = matBGR.width(),height= matBGR.height(),channels=matBGR.channels();
		byte[] source = new byte[width*height*channels];
		matBGR.get(0, 0,source);
		bufferedImage = new BufferedImage(width,height,BufferedImage.TYPE_3BYTE_BGR);
		final byte[] target = ((DataBufferByte) bufferedImage.getRaster().getDataBuffer()).getData();
		System.arraycopy(source, 0, target, 0, source.length);
		}
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel MarkedAttendance;
    private javax.swing.JPanel cameraOutput;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    public void recognize(){
	   String dirOfFace =".\\Faces";
	   String dirOfTestFaces =".\\TestFaces";
	   
	   File root = new File(dirOfFace);
           File Testfaces = new File(dirOfTestFaces);
       FilenameFilter imgFilter = new FilenameFilter() {

           public boolean accept(File dir, String name) {

               name = name.toLowerCase();

               return name.endsWith(".jpg") || name.endsWith(".pgm") || name.endsWith(".png");

           }

       };
       
       File[] imageFiles = Testfaces.listFiles(imgFilter);
       for (File image : imageFiles) {
           Recognizer fd = new Recognizer();
           int rollno=0;
           rollno = fd.returnPredict(image,root);
           System.out.println(rollno);
               try {
                   db.AttendenceTable(rollno);
               } catch (ClassNotFoundException ex) {
                   JOptionPane.showMessageDialog(null, ex);
               }
       }


   }
}
